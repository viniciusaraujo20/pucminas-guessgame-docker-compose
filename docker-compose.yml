version: "3.8"

services:
  db:
    image: postgres:16
    container_name: db-guessgame
    environment:
      POSTGRES_USER: guessgame-user
      POSTGRES_PASSWORD: rrp7OZV087T48V
      POSTGRES_DB: guessdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    restart: always

  backend1:
    container_name: backend1-guessgame
    build:
      context: .
      dockerfile: guess/Dockerfile
    environment:
      FLASK_APP: run.py
      FLASK_DB_TYPE: postgres
      FLASK_DB_USER: guessgame-user
      FLASK_DB_NAME: guessdb
      FLASK_DB_PASSWORD: rrp7OZV087T48V
      FLASK_DB_HOST: db
      FLASK_DB_PORT: 5432
    depends_on:
      - db
    networks:
      - backend
    restart: always

  backend2:
    container_name: backend2-guessgame
    build:
      context: .
      dockerfile: guess/Dockerfile
    environment:
      FLASK_APP: run.py
      FLASK_DB_TYPE: postgres
      FLASK_DB_USER: guessgame-user
      FLASK_DB_NAME: guessdb
      FLASK_DB_PASSWORD: rrp7OZV087T48V
      FLASK_DB_HOST: db
      FLASK_DB_PORT: 5432
    depends_on:
      - db
    networks:
      - backend
    restart: always

  frontend:
    container_name: frontend-guessgame
    build: ./frontend
    networks:
      - frontend
    restart: always

  nginx:
    image: nginx:alpine
    container_name: nginx-guessgame
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend1
      - backend2
    networks:
      - backend
      - frontend
    restart: always

volumes:
  pgdata:

networks:
  backend:
  frontend:
